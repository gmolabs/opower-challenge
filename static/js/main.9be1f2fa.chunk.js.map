{"version":3,"sources":["img/car-fill.svg","img/car-outline.svg","img/tree-fill.svg","img/tree-outline.svg","utils/nItems.js","Viz.js","ValueLabelComponent.js","SettingsMenu.js","Navbar.js","VizToggle.js","SavingsDescription.js","SavingsGraph.js","hooks/useLocalStorageState.js","OpowerApp.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","getNItems","currentYear","priorYear","vizMode","savings","Math","round","Viz","nItems","style","padding","Array","abs","map","e","i","Zoom","in","key","uuid","v4","transitionDelay","src","CarFill","TreeFill","width","CarOutline","TreeOutline","ValueLabelComponent","props","children","open","value","popperRef","React","useRef","useEffect","current","update","Tooltip","PopperProps","enterTouchDelay","placement","title","SettingsMenu","setPriorYear","setCurrentYear","classes","makeStyles","theme","menuItem","menuLabel","menuSlider","marginLeft","marginRight","useStyles","useState","anchorEl","setAnchorEl","Boolean","IconButton","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","color","Menu","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","className","Typography","Slider","defaultValue","max","onChangeCommitted","root","flexGrow","Navbar","AppBar","position","height","VizToggle","setVizMode","ToggleButtonGroup","margin","exclusive","onChange","newVizMode","ToggleButton","SavingsDescription","Container","display","flexDirection","paddingRight","paddingTop","variant","gutterBottom","paddingLeft","paddingBottom","SavingsGraph","graphData","name","kwh","data","top","right","left","bottom","strokeDasharray","dataKey","domain","fill","useLocalStorageState","defaultVal","val","JSON","parse","window","localStorage","getItem","String","state","setState","setItem","stringify","OpowerApp","energyUse","bgPaper","backgroundColor","mainGrid","marginTop","descriptionPaper","vizPaper","textAlign","Paper","elevation","Grid","container","justify","spacing","item","xs","md","lg","App","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9be1f2fa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/car-fill.c07f5df3.svg\";","module.exports = __webpack_public_path__ + \"static/media/car-outline.7d7be337.svg\";","module.exports = __webpack_public_path__ + \"static/media/tree-fill.785e703c.svg\";","module.exports = __webpack_public_path__ + \"static/media/tree-outline.ebc5639c.svg\";","function getNItems(currentYear, priorYear, vizMode) {\n    const curYear = currentYear\n    const lastYear = priorYear\n    const savings = lastYear - curYear\n    const carFactor = 35\n    const treeFactor = 210\n    const nItems = Math.round((vizMode === \"cars\" ? (savings / carFactor) : (savings / treeFactor)) * 100) / 100\n    return nItems\n}\n\nexport default getNItems","import React, { useContext } from \"react\"\nimport CarFill from \"./img/car-fill.svg\"\nimport CarOutline from \"./img/car-outline.svg\"\nimport TreeFill from \"./img/tree-fill.svg\"\nimport TreeOutline from \"./img/tree-outline.svg\"\nimport uuid from \"uuid\"\nimport getNItems from \"./utils/nItems\"\nimport Zoom from '@material-ui/core/Zoom';\n\nfunction Viz({ currentYear, priorYear, vizMode }) {\n    const nItems = getNItems(currentYear, priorYear, vizMode)\n    return (\n        <div style={{ padding: 20 }}>\n            {[...Array(Math.abs(Math.round(nItems)))].map((e, i) =>\n                <Zoom in={true} key={uuid.v4()} style={{ transitionDelay: `${(i + 1) * 100}ms` }} >\n                    <img\n                        src={vizMode == \"cars\" ? CarFill : TreeFill}\n                        style={{\n                            width: \"20%\",\n                            padding: 10,\n                            // filter: \"invert(0.5) sepia(1) saturate(1) hue-rotate(\" + Math.floor(Math.random() * 360) + \"deg)\"\n                        }}\n                        key={i}\n                    />\n                </Zoom>\n            )}\n            {nItems == 0 &&\n                <Zoom in={true} style={{ transitionDelay: \"100ms\" }} >\n                    <img src={vizMode == \"cars\" ? CarOutline : TreeOutline} style={{ width: \"20%\", padding: 10 }} />\n                </Zoom>\n            }\n        </div >\n    )\n}\n\nexport default Viz","import React, { useEffect } from \"react\"\nimport Tooltip from \"@material-ui/core/Tooltip\"\nimport PropTypes from 'prop-types';\n\nfunction ValueLabelComponent(props) {\n    const { children, open, value } = props;\n\n    const popperRef = React.useRef(null);\n    React.useEffect(() => {\n        if (popperRef.current) {\n            popperRef.current.update();\n        }\n    });\n\n    return (\n        <Tooltip\n            PopperProps={{\n                popperRef,\n            }}\n            open={open}\n            enterTouchDelay={0}\n            placement=\"top\"\n            title={value}\n        >\n            {children}\n        </Tooltip>\n    );\n}\n\nValueLabelComponent.propTypes = {\n    children: PropTypes.element.isRequired,\n    open: PropTypes.bool.isRequired,\n    value: PropTypes.number.isRequired,\n};\n\nexport default ValueLabelComponent","import React from \"react\"\nimport Menu from \"@material-ui/core/Menu\"\nimport MenuItem from \"@material-ui/core/MenuItem\"\nimport Slider from \"@material-ui/core/Slider\"\nimport ValueLabelComponent from \"./ValueLabelComponent\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Settings from \"@material-ui/icons/Settings\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nfunction SettingsMenu({ priorYear, currentYear, setPriorYear, setCurrentYear }) {\n    const useStyles = makeStyles(theme => ({\n        menuItem: {\n            width: 300\n        },\n        menuLabel: {\n            width: 120\n        },\n        menuSlider: {\n            marginLeft: 20,\n            marginRight: 25\n        }\n    }))\n    const classes = useStyles()\n    const [anchorEl, setAnchorEl] = React.useState(null)\n    const handleMenu = event => {\n        setAnchorEl(event.currentTarget)\n    }\n    const handleClose = () => {\n        setAnchorEl(null)\n    }\n    const open = Boolean(anchorEl);\n    const handlePriorYearSliderChange = (e, value) => {\n        setPriorYear(value)\n    }\n    const handleThisYearSliderChange = (e, value) => {\n        setCurrentYear(value)\n    }\n\n    return (\n        <>\n            <IconButton\n                aria-label=\"adjust values\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n            >\n                <Settings />\n            </IconButton>\n            <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}\n                keepMounted\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}\n                open={open}\n                onClose={handleClose}\n            >\n                <MenuItem className={classes.menuItem} ><Typography className={classes.menuLabel}>Prior Year</Typography>\n                    <Slider\n                        ValueLabelComponent={ValueLabelComponent}\n                        aria-label=\"adjust prior year energy use\"\n                        defaultValue={priorYear}\n                        className={classes.menuSlider}\n                        max={2000}\n                        onChangeCommitted={handlePriorYearSliderChange}\n                        defaultValue={priorYear}\n                    />\n                </MenuItem>\n                <MenuItem className={classes.menuItem} ><Typography className={classes.menuLabel}>This Year</Typography>\n                    <Slider\n                        ValueLabelComponent={ValueLabelComponent}\n                        aria-label=\"adjust current year energy\"\n                        defaultValue={currentYear}\n                        className={classes.menuSlider}\n                        max={2000}\n                        onChangeCommitted={handleThisYearSliderChange}\n                        defaultValue={currentYear}\n                    />\n                </MenuItem>\n            </Menu>\n        </>\n    )\n}\n\nexport default SettingsMenu","import React from \"react\"\nimport AppBar from \"@material-ui/core/AppBar\"\nimport ToolBar from \"@material-ui/core/Toolbar\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport SettingsMenu from \"./SettingsMenu\"\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    title: {\n        flexGrow: 1,\n    }\n}))\n\nfunction Navbar({ priorYear, currentYear, setPriorYear, setCurrentYear }) {\n    const classes = useStyles()\n    return (\n        <AppBar color=\"primary\" position=\"static\" style={{ height: \"64px\" }}>\n            <ToolBar>\n                <Typography color=\"inherit\" className={classes.title}>Your Energy Savings</Typography>\n                <SettingsMenu priorYear={priorYear} currentYear={currentYear} setPriorYear={setPriorYear} setCurrentYear={setCurrentYear} />\n            </ToolBar>\n        </AppBar >\n    )\n}\n\nexport default Navbar","import React from \"react\"\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\"\nimport ToggleButton from \"@material-ui/lab/ToggleButton\"\nimport DriveEta from \"@material-ui/icons/DriveEta\"\nimport NaturePeople from \"@material-ui/icons/NaturePeople\"\nimport Typography from \"@material-ui/core/Typography\"\n\nfunction VizToggle({ vizMode, setVizMode }) {\n    const handleVizMode = (event, newVizMode) => {\n        if (newVizMode) {\n            setVizMode(newVizMode)\n        }\n    }\n\n    return (\n        <ToggleButtonGroup\n            style={{ margin: 20 }}\n            value={vizMode}\n            exclusive\n            onChange={handleVizMode}\n            aria-label=\"viz type\">\n            <ToggleButton value=\"cars\" aria-label=\"cars\">\n                <DriveEta /><Typography>Cars</Typography>\n            </ToggleButton>\n            <ToggleButton value=\"trees\" aria-label=\"trees\">\n                <NaturePeople /><Typography>Trees</Typography>\n            </ToggleButton>\n        </ToggleButtonGroup>\n    )\n}\n\nexport default VizToggle","import React from \"react\"\nimport Container from \"@material-ui/core/Container\"\nimport ThumbUp from \"@material-ui/icons/ThumbUp\"\nimport Warning from \"@material-ui/icons/Warning\"\nimport CheckCircle from \"@material-ui/icons/CheckCircle\"\nimport Typography from \"@material-ui/core/Typography\"\nimport uuid from \"uuid\"\nimport Zoom from '@material-ui/core/Zoom';\nimport getNItems from \"./utils/nItems\"\nfunction SavingsDescription({ priorYear, currentYear, vizMode }) {\n\n    const nItems = getNItems(currentYear, priorYear, vizMode)\n    return (\n        <Container>\n            <div style={{ display: \"flex\", flexDirection: \"row\", }}>\n                <Zoom in={true} key={uuid.v4()}>\n\n                    {\n                        nItems < 0 &&\n                        <Warning style={{\n                            paddingRight: 15,\n                            paddingTop: 2\n                        }} />\n                        || nItems == 0 &&\n                        <CheckCircle style={{\n                            paddingRight: 15,\n                            paddingTop: 2\n                        }} />\n                        || nItems > 0 &&\n                        <ThumbUp style={{\n                            paddingRight: 15,\n                            paddingTop: 2\n                        }} />\n                    }\n                </Zoom>\n                <Typography variant=\"h5\" gutterBottom>\n                    {\n                        ((nItems < 0 && vizMode === \"cars\") && `Compared to this month last year, you used ${Math.abs(nItems)} more ${nItems === -1 ? \"car's\" : \"cars'\"} worth of energy.`)\n                        || ((nItems < 0 && vizMode === \"trees\") && `Compared to this month last year, you used the carbon equivalent of ${Math.abs(nItems)} ${nItems === -1 ? \"tree's\" : \"trees'\"} more energy.`)\n                        || ((nItems === 0) && `You used the same amount of energy as this month last year.`)\n                        || ((nItems > 0 && vizMode === \"cars\") && `Last month, you saved enough energy to take ${nItems} car${nItems === 1 ? \"\" : \"s\"} off the road!`)\n                        || ((nItems > 0 && vizMode === \"trees\") && `Last month, you saved the energy equivalent of ${nItems} tree${nItems === 1 ? \"'s\" : \"s'\"} worth of carbon!`)\n                    }\n                </Typography>\n            </div>\n            <Typography variant=\"body1\" style={{ paddingLeft: 40, paddingTop: 10, paddingBottom: 20 }}>\n                {\n\n                    (nItems < 0 && vizMode == \"cars\") &&\n                    `You used ${currentYear} kwh last month, \n                        compared to ${priorYear} kwh in the same month last year. \n                        This amount is equal to the energy consumption of  \n                        ${Math.abs(nItems)} average-size car${nItems == 1 ? \"\" : \"s\"} for one month.`\n                    || (nItems < 0 && vizMode == \"trees\") &&\n                    `You used ${currentYear} kwh last month, \n                        compared to ${priorYear} kwh in the same month last year. \n                        It would take\n                        ${Math.abs(nItems)} tree${nItems == 1 ? \"\" : \"s\"} a month to sequester that amount of carbon.`\n                    || nItems == 0 &&\n                    `You used ${currentYear} kwh last month, \n                        the same amount as the same month last year.`\n                    || (nItems > 0 && vizMode == \"cars\") &&\n                    `Great Job! You used ${currentYear} kwh last month, \n                        compared to ${priorYear} kwh in the same month last year.\n                        The resulting saving is enough to offset the \n                        energy consumption of ${nItems} average-size car${nItems == 1 ? \"\" : \"s\"}\n                        for one month.`\n                    || (nItems > 0 && vizMode == \"trees\") &&\n                    `Great Job! You used ${currentYear} kwh last month, \n                        compared to ${priorYear} kwh in the same month last year.\n                        The resulting saving is equivalent to the \n                        carbon sequestered by ${nItems} tree${nItems == 1 ? \"\" : \"s\"}\n                        in one month.`\n                }\n            </Typography>\n        </Container>\n    )\n}\n\nexport default SavingsDescription","import React from \"react\"\nimport {\n    BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts'\n\nfunction SavingsGraph({ priorYear, currentYear }) {\n    const graphData = [\n        {\n            name: 'Last year', kwh: priorYear\n        },\n        {\n            name: 'This year', kwh: currentYear\n        }\n    ]\n\n    return (\n        <BarChart\n            width={300}\n            height={300}\n            data={graphData}\n            margin={{\n                top: 0, right: 30, left: 20, bottom: 5,\n            }}\n            style={{\n                marginLeft: \"auto\",\n                marginRight: \"auto\"\n            }}\n        >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"name\" />\n            <YAxis domain={[0, 2000]} />\n            <Tooltip />\n            <Legend />\n            <Bar dataKey=\"kwh\" fill=\"#8884d8\" />\n        </BarChart>\n    )\n}\n\nexport default SavingsGraph","import { useState, useEffect } from \"react\"\n\nfunction useLocalStorageState(key, defaultVal) {\n    //make piece of state based off value in local storage\n    const [state, setState] = useState(() => {\n        let val;\n        try {\n            val = JSON.parse(window.localStorage.getItem(key) || String(defaultVal))\n        }\n        catch (e) {\n            val = defaultVal\n        }\n        return val\n    })\n    //use useEffect to update localstorage when state changes\n    useEffect(() => {\n        window.localStorage.setItem(key, JSON.stringify(state))\n    }, [state])\n    return [state, setState]\n}\nexport default useLocalStorageState","import React, { useContext, useState, PureComponent } from \"react\"\nimport Paper from \"@material-ui/core/Paper\"\nimport Grid from \"@material-ui/core/Grid\"\nimport Viz from \"./Viz\"\nimport data from \"./data.json\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport Navbar from \"./Navbar\"\nimport VizToggle from \"./VizToggle\"\nimport SavingsDescription from \"./SavingsDescription\"\nimport SavingsGraph from \"./SavingsGraph\"\nimport useLocalStorageState from \"./hooks/useLocalStorageState\"\n\nfunction OpowerApp() {\n    const [vizMode, setVizMode] = useLocalStorageState(\"vizType\", \"cars\")\n    const [priorYear, setPriorYear] = useLocalStorageState(\"priorYear\", data.energyUse.priorYear)\n    const [currentYear, setCurrentYear] = useLocalStorageState(\"currentYear\", data.energyUse.currentYear)\n\n    const useStyles = makeStyles(theme => ({\n        root: {\n            flexGrow: 1,\n        },\n        bgPaper: {\n            padding: 0,\n            margin: 0,\n            height: \"100vh\",\n            width: \"100vw\",\n            backgroundColor: \"#fafafa\"\n        },\n        mainGrid: {\n            marginTop: \"1rem\",\n            width: \"100vw\"\n        },\n        descriptionPaper: {\n            paddingTop: 20, paddingBottom: 20\n        },\n        vizPaper: {\n            textAlign: \"center\"\n        }\n    }))\n    const classes = useStyles()\n\n    return (\n        <Paper className={classes.bgPaper} elevation={0}>\n            <Navbar priorYear={priorYear} currentYear={currentYear} setPriorYear={setPriorYear} setCurrentYear={setCurrentYear} />\n            <Grid className={classes.mainGrid} container justify=\"center\" spacing={3}>\n                <Grid item xs={11} md={11} lg={6}>\n                    <Paper className={classes.descriptionPaper}>\n                        <SavingsDescription priorYear={priorYear} currentYear={currentYear} vizMode={vizMode} />\n                        <SavingsGraph priorYear={priorYear} currentYear={currentYear} vizMode={vizMode} />\n                    </Paper>\n                </Grid>\n                <Grid item xs={11} md={11} lg={5}>\n                    <Paper className={classes.vizPaper}>\n                        <VizToggle vizMode={vizMode} setVizMode={setVizMode} />\n                        <Viz priorYear={priorYear} currentYear={currentYear} vizMode={vizMode} />\n                    </Paper>\n                </Grid>\n\n            </Grid>\n        </Paper >\n    )\n}\n\nexport default OpowerApp","import React from 'react'\nimport './App.css'\nimport OpowerApp from './OpowerApp'\n\n\nfunction App() {\n  return (\n    <OpowerApp />\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}