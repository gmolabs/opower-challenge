{"version":3,"sources":["img/car-fill.svg","img/car-outline.svg","img/tree-fill.svg","img/tree-outline.svg","contexts/VizContext.js","Viz.js","Navbar.js","VizToggle.js","SavingsDescription.js","SavingsGraph.js","OpowerApp.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","createContext","Viz","currentYear","priorYear","vizMode","savings","n","Math","round","style","padding","Array","abs","map","e","i","src","CarFill","TreeFill","width","key","CarOutline","TreeOutline","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","menuItem","menuLabel","menuSlider","marginLeft","Navbar","setPriorYear","setCurrentYear","classes","React","useState","anchorEl","setAnchorEl","open","Boolean","AppBar","color","position","height","Typography","className","IconButton","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","Menu","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","Slider","max","onChangeCommitted","value","defaultValue","VizToggle","setVizMode","ToggleButtonGroup","margin","exclusive","onChange","newVizMode","ToggleButton","SavingsDescription","curYear","lastYear","nItems","Container","display","flexDirection","paddingRight","paddingTop","variant","gutterBottom","paddingLeft","paddingBottom","SavingsGraph","graphData","name","kwh","data","top","right","left","bottom","strokeDasharray","dataKey","fill","OpowerApp","energyUse","Paper","backgroundColor","elevation","Grid","container","justify","marginTop","item","xs","md","lg","textAlign","App","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.34679d8c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/car-fill.c07f5df3.svg\";","module.exports = __webpack_public_path__ + \"static/media/car-outline.7d7be337.svg\";","module.exports = __webpack_public_path__ + \"static/media/tree-fill.785e703c.svg\";","module.exports = __webpack_public_path__ + \"static/media/tree-outline.ebc5639c.svg\";","import React, { createContext } from \"react\"\nimport useLocalStorageState from \"../hooks/useLocalStorageState\"\n\nexport const VizContext = createContext()\n\nexport function VizModeProvider(props) {\n    const [vizMode, setVizMode] = useLocalStorageState(\"vizType\", \"trees\")\n\n    return (\n        <VizContext.Provider value={{ vizMode, setVizMode }}>\n            {props.children}\n        </VizContext.Provider>\n    )\n}","import React, { useContext } from \"react\"\nimport { VizContext } from \"./contexts/VizContext\"\nimport Paper from \"@material-ui/core/Paper\"\nimport { flexbox } from \"@material-ui/system\"\nimport CarFill from \"./img/car-fill.svg\"\nimport CarOutline from \"./img/car-outline.svg\"\nimport TreeFill from \"./img/tree-fill.svg\"\nimport TreeOutline from \"./img/tree-outline.svg\"\n\nfunction Viz({ currentYear, priorYear, vizMode }) {\n    // const { vizMode, setVizMode } = useContext(VizContext)\n    const curYear = currentYear\n    const lastYear = priorYear\n    const savings = lastYear - curYear\n    const carFactor = 35\n    const treeFactor = 210\n    const n = (vizMode === \"cars\" ? Math.round(savings / carFactor) : Math.round(savings / treeFactor))\n\n    return (\n        <div style={{ padding: 20 }}>\n            {[...Array(Math.abs(n))].map((e, i) => <img src={vizMode == \"cars\" ? CarFill : TreeFill} style={{ width: \"20%\", padding: 10 }} key={i} />)}\n            {n == 0 && <img src={vizMode == \"cars\" ? CarOutline : TreeOutline} style={{ width: \"20%\", padding: 10 }} />}\n        </div>\n    )\n}\n\nexport default Viz","import React, { useState } from \"react\"\nimport AppBar from \"@material-ui/core/AppBar\"\nimport ToolBar from \"@material-ui/core/Toolbar\"\nimport Typography from \"@material-ui/core/Typography\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Settings from \"@material-ui/icons/Settings\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Menu from \"@material-ui/core/Menu\"\nimport MenuItem from \"@material-ui/core/MenuItem\"\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n    menuItem: {\n        width: 400\n    },\n    menuLabel: {\n        width: 120\n    },\n    menuSlider: {\n        marginLeft: 20\n    }\n}))\n\nfunction Navbar({ priorYear, currentYear, setPriorYear, setCurrentYear }) {\n    const classes = useStyles()\n    const [anchorEl, setAnchorEl] = React.useState(null)\n    const handleMenu = event => {\n        setAnchorEl(event.currentTarget)\n    }\n    const handleClose = () => {\n        setAnchorEl(null)\n    }\n    const open = Boolean(anchorEl);\n    const handlePriorYearSliderChange = (e, value) => {\n        setPriorYear(value)\n    }\n    const handleThisYearSliderChange = (e, value) => {\n        setCurrentYear(value)\n    }\n\n\n    return (\n        <AppBar color=\"primary\" position=\"static\" style={{ height: \"64px\" }}>\n            <ToolBar>\n                <Typography color=\"inherit\" className={classes.title}>Your Energy Savings</Typography>\n                <IconButton\n                    aria-label=\"account of current user\"\n                    aria-controls=\"menu-appbar\"\n                    aria-haspopup=\"true\"\n                    onClick={handleMenu}\n                    color=\"inherit\"\n                >\n                    <Settings />\n                </IconButton>\n                <Menu\n                    id=\"menu-appbar\"\n                    anchorEl={anchorEl}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right',\n                    }}\n                    keepMounted\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right',\n                    }}\n                    open={open}\n                    onClose={handleClose}\n                >\n                    <MenuItem className={classes.menuItem} ><Typography className={classes.menuLabel}>Prior Year</Typography>\n                        <Slider\n                            className={classes.menuSlider}\n                            max={2000}\n                            onChangeCommitted={handlePriorYearSliderChange}\n                            defaultValue={priorYear}\n                        />\n                    </MenuItem>\n                    <MenuItem className={classes.menuItem} ><Typography className={classes.menuLabel}>This Year</Typography>\n                        <Slider\n                            className={classes.menuSlider}\n                            max={2000}\n                            onChangeCommitted={handleThisYearSliderChange}\n                            defaultValue={currentYear}\n                        />\n                    </MenuItem>\n                </Menu>\n            </ToolBar>\n        </AppBar >\n    )\n}\n\nexport default Navbar","import React from \"react\"\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\"\nimport ToggleButton from \"@material-ui/lab/ToggleButton\"\nimport DriveEta from \"@material-ui/icons/DriveEta\"\nimport NaturePeople from \"@material-ui/icons/NaturePeople\"\nimport Typography from \"@material-ui/core/Typography\"\n\nfunction VizToggle({ vizMode, setVizMode }) {\n    const handleVizMode = (event, newVizMode) => {\n        if (newVizMode) {\n            setVizMode(newVizMode)\n        }\n    }\n\n    return (\n        <ToggleButtonGroup\n            style={{ margin: 20 }}\n            value={vizMode}\n            exclusive\n            onChange={handleVizMode}\n            aria-label=\"viz type\">\n            <ToggleButton value=\"cars\" aria-label=\"cars\">\n                <DriveEta /><Typography>Cars</Typography>\n            </ToggleButton>\n            <ToggleButton value=\"trees\" aria-label=\"trees\">\n                <NaturePeople /><Typography>Trees</Typography>\n            </ToggleButton>\n        </ToggleButtonGroup>\n    )\n}\n\nexport default VizToggle","import React from \"react\"\nimport Container from \"@material-ui/core/Container\"\nimport ThumbUp from \"@material-ui/icons/ThumbUp\"\nimport Warning from \"@material-ui/icons/Warning\"\nimport CheckCircle from \"@material-ui/icons/CheckCircle\"\nimport Typography from \"@material-ui/core/Typography\"\n\nfunction SavingsDescription({ priorYear, currentYear, vizMode }) {\n\n    const curYear = currentYear\n    const lastYear = priorYear\n    const savings = lastYear - curYear\n    const carFactor = 35\n    const treeFactor = 210\n    const nItems = Math.round((vizMode === \"cars\" ? (savings / carFactor) : (savings / treeFactor)) * 100) / 100\n    const n = Math.round(nItems)\n\n    return (\n        <Container>\n            <div style={{ display: \"flex\", flexDirection: \"row\", }}>\n                {\n                    nItems < 0 &&\n                    <Warning style={{\n                        paddingRight: 15,\n                        paddingTop: 2\n                    }} />\n                    || nItems == 0 &&\n                    <CheckCircle style={{\n                        paddingRight: 15,\n                        paddingTop: 2\n                    }} />\n                    || nItems > 0 &&\n                    <ThumbUp style={{\n                        paddingRight: 15,\n                        paddingTop: 2\n                    }} />\n                }\n                <Typography variant=\"h5\" gutterBottom>\n                    {\n                        ((nItems < 0 && vizMode === \"cars\") && `Compared to this month last year, you used ${Math.abs(nItems)} more ${n === -1 ? \"car's\" : \"cars'\"} worth of energy.`)\n                        || ((nItems < 0 && vizMode === \"trees\") && `Compared to this month last year, you used the carbon equivalent of ${Math.abs(nItems)} ${n === -1 ? \"tree's\" : \"trees'\"} more energy.`)\n                        || ((nItems === 0) && `You used the same amount of energy as this month last year.`)\n                        || ((nItems > 0 && vizMode === \"cars\") && `Last month, you saved enough energy to take ${nItems} car${nItems === 1 ? \"\" : \"s\"} off the road!`)\n                        || ((nItems > 0 && vizMode === \"trees\") && `Last month, you saved the energy equivalent of ${nItems} tree${nItems === 1 ? \"'s\" : \"s\"} worth of carbon!`)\n                    }\n                </Typography>\n            </div>\n            <Typography variant=\"body1\" style={{ paddingLeft: 40, paddingTop: 10, paddingBottom: 20 }}>\n                {\n\n                    (nItems < 0 && vizMode == \"cars\") &&\n                    `You used ${curYear} kwh last month, \n                        compared to ${lastYear} kwh in the same month last year. \n                        This amount is equal to the energy consumption of  \n                        ${Math.abs(nItems)} average-size car${nItems == 1 ? \"\" : \"s\"} for one month.`\n                    || (nItems < 0 && vizMode == \"trees\") &&\n                    `You used ${curYear} kwh last month, \n                        compared to ${lastYear} kwh in the same month last year. \n                        It would take\n                        ${Math.abs(nItems)} tree${nItems == 1 ? \"\" : \"s\"} a month to sequester that amount of carbon.`\n                    || nItems == 0 &&\n                    `You used ${curYear} kwh last month, \n                        the same amount as the same month last year.`\n                    || (nItems > 0 && vizMode == \"cars\") &&\n                    `Great Job! You used ${curYear} kwh last month, \n                        compared to ${lastYear} kwh in the same month last year.\n                        The resulting saving is enough to offset the \n                        energy consumption of ${nItems} average-size car${nItems == 1 ? \"\" : \"s\"}\n                        for one month.`\n                    || (nItems > 0 && vizMode == \"trees\") &&\n                    `Great Job! You used ${curYear} kwh last month, \n                        compared to ${lastYear} kwh in the same month last year.\n                        The resulting saving is equivalent to the \n                        carbon sequestered by ${nItems} tree${nItems == 1 ? \"\" : \"s\"}\n                        in one month.`\n                }\n            </Typography>\n        </Container>\n    )\n}\n\nexport default SavingsDescription","import React from \"react\"\nimport {\n    BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts'\n\nfunction SavingsGraph({ priorYear, currentYear }) {\n    const graphData = [\n        {\n            name: 'Last year', kwh: priorYear\n        },\n        {\n            name: 'This year', kwh: currentYear\n        }\n    ]\n\n    return (\n        <BarChart\n            width={300}\n            height={300}\n            data={graphData}\n            margin={{\n                top: 0, right: 30, left: 20, bottom: 5,\n            }}\n            style={{\n                marginLeft: \"auto\",\n                marginRight: \"auto\"\n            }}\n        >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"name\" />\n            <YAxis />\n            <Tooltip />\n            <Legend />\n            <Bar dataKey=\"kwh\" fill=\"#8884d8\" />\n        </BarChart>\n    )\n}\n\nexport default SavingsGraph","import React, { useContext, useState, PureComponent } from \"react\"\nimport Paper from \"@material-ui/core/Paper\"\nimport Grid from \"@material-ui/core/Grid\"\nimport Viz from \"./Viz\"\nimport data from \"./data.json\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport Navbar from \"./Navbar\"\nimport VizToggle from \"./VizToggle\"\nimport SavingsDescription from \"./SavingsDescription\"\nimport SavingsGraph from \"./SavingsGraph\"\n\n/*\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n}));\n*/\n\n// {\n//     \"customer\": {\n//       \"id\": \"A29071\",\n//       \"name\": \"Julia Simpson\"\n//     },\n//     \"energyUse\": {\n//       \"currentYear\": 573,\n//       \"priorYear\": 791\n//     }\n//   }\n\nfunction OpowerApp() {\n    const [myData, setMyData] = useState(data);\n    const [vizMode, setVizMode] = useState(\"cars\")\n    const [priorYear, setPriorYear] = useState(data.energyUse.priorYear)\n    const [currentYear, setCurrentYear] = useState(data.energyUse.currentYear)\n\n    return (\n        <Paper style={{\n            padding: 0,\n            margin: 0,\n            height: \"100vh\",\n            width: \"100vw\",\n            backgroundColor: \"#fafafa\"\n        }}\n            elevation={0}\n        >\n            <Navbar priorYear={priorYear} currentYear={currentYear} setPriorYear={setPriorYear} setCurrentYear={setCurrentYear} />\n            <Grid container justify=\"center\" spacing={3} style={{ marginTop: \"1rem\", width: \"100vw\" }} >\n                <Grid item xs={11} md={11} lg={5}>\n                    <Paper style={{ textAlign: \"center\" }}>\n                        <Viz priorYear={priorYear} currentYear={currentYear} vizMode={vizMode} />\n                        <VizToggle vizMode={vizMode} setVizMode={setVizMode} />\n                    </Paper>\n                </Grid>\n                <Grid item xs={11} md={11} lg={6}>\n                    <Paper style={{ padding: 30 }}>\n                        <SavingsDescription priorYear={priorYear} currentYear={currentYear} vizMode={vizMode} />\n                        <SavingsGraph priorYear={priorYear} currentYear={currentYear} vizMode={vizMode} />\n                    </Paper>\n                </Grid>\n            </Grid>\n\n        </Paper >\n    )\n}\n\nexport default OpowerApp","import React from 'react'\nimport './App.css'\nimport OpowerApp from './OpowerApp'\n\n\nfunction App() {\n  return (\n    <OpowerApp />\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}